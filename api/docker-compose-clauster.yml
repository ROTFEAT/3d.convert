services:
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis123}
    restart: always
    volumes:
      - redis_data:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-redis123}", "ping"]
      interval: 300s 
      timeout: 10s
      retries: 3


  api:
    build:
      context: ..
      dockerfile: Dockerfile
    command: python app.py
    restart: always
    volumes:
      - ./tmp:/app/tmp
    networks:
      - app-network
    ports:
      - 6666
    environment:
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redis123}@redis:6379/0
      - DEPLOYMENT=docker
      - API_BASE_URL=${HOST_URL:-}
      - HOST_URL=${HOST_URL:-}
      - R2_ACCOUNT_ID=${R2_ACCOUNT_ID:-}
      - R2_ACCESS_KEY_ID=${R2_ACCESS_KEY_ID:-}
      - R2_SECRET_ACCESS_KEY=${R2_SECRET_ACCESS_KEY:-}
      - R2_BUCKET_NAME=${R2_BUCKET_NAME:-}
      - R2_PUBLIC_URL=${R2_PUBLIC_URL:-}


#  worker:
#    build:
#      context: .
#      dockerfile: Dockerfile.worker
#    working_dir: /app
#    command: python -m dramatiq dr_worker
#    restart: always
#    volumes:
#      - ./tmp:/app/tmp
#    networks:
#      - app-network
#    environment:
#      - REDIS_URL=redis://:${REDIS_PASSWORD:-redis123}@redis:6379/0
#      - DEPLOYMENT=docker
#      - API_BASE_URL=${HOST_URL:-}
#      - HOST_URL=${HOST_URL:-}
#      - WORKER_ID=${WORKER_ID:-auto}
#      - R2_ACCOUNT_ID=${R2_ACCOUNT_ID:-}
#      - R2_ACCESS_KEY_ID=${R2_ACCESS_KEY_ID:-}
#      - R2_SECRET_ACCESS_KEY=${R2_SECRET_ACCESS_KEY:-}
#      - R2_BUCKET_NAME=${R2_BUCKET_NAME:-}
#      - R2_PUBLIC_URL=${R2_PUBLIC_URL:-}

networks:
  app-network:
    driver: bridge

volumes:
  redis_data:

    
